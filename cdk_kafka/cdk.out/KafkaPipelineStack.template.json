{
 "Resources": {
  "KafkaRepo8D8D2D0F": {
   "Type": "AWS::CodeCommit::Repository",
   "Properties": {
    "RepositoryName": "KafkaRepo"
   },
   "Metadata": {
    "aws:cdk:path": "KafkaPipelineStack/KafkaRepo/Resource"
   }
  },
  "KafkaRepoKafkaPipelineStackPipelineFE5FD45BEventRule82A1CCFD": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "EventPattern": {
     "source": [
      "aws.codecommit"
     ],
     "resources": [
      {
       "Fn::GetAtt": [
        "KafkaRepo8D8D2D0F",
        "Arn"
       ]
      }
     ],
     "detail-type": [
      "CodeCommit Repository State Change"
     ],
     "detail": {
      "event": [
       "referenceCreated",
       "referenceUpdated"
      ],
      "referenceName": [
       "master"
      ]
     }
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::Join": [
        "",
        [
         "arn:",
         {
          "Ref": "AWS::Partition"
         },
         ":codepipeline:",
         {
          "Ref": "AWS::Region"
         },
         ":",
         {
          "Ref": "AWS::AccountId"
         },
         ":",
         {
          "Ref": "Pipeline9850B417"
         }
        ]
       ]
      },
      "Id": "Target0",
      "RoleArn": {
       "Fn::GetAtt": [
        "PipelineEventsRole96280D9B",
        "Arn"
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "KafkaPipelineStack/KafkaRepo/KafkaPipelineStackPipelineFE5FD45BEventRule/Resource"
   }
  },
  "PipelineArtifactsBucketAEA9A052": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "aws:kms"
       }
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "KafkaPipelineStack/Pipeline/Pipeline/ArtifactsBucket/Resource"
   }
  },
  "PipelineArtifactsBucketPolicyF53CCC52": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "PipelineArtifactsBucketAEA9A052"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "PipelineArtifactsBucketAEA9A052",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PipelineArtifactsBucketAEA9A052",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":role/cdk-hnb659fds-deploy-role-",
           {
            "Ref": "AWS::AccountId"
           },
           "-",
           {
            "Ref": "AWS::Region"
           }
          ]
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "PipelineArtifactsBucketAEA9A052",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PipelineArtifactsBucketAEA9A052",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "KafkaPipelineStack/Pipeline/Pipeline/ArtifactsBucket/Policy/Resource"
   }
  },
  "PipelineRoleB27FAA37": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codepipeline.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "KafkaPipelineStack/Pipeline/Pipeline/Role/Resource"
   }
  },
  "PipelineRoleDefaultPolicy7BDC1ABB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PipelineArtifactsBucketAEA9A052",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PipelineArtifactsBucketAEA9A052",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PipelineCodeBuildActionRole226DB0CB",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "PipelineSourceCodeCommitCodePipelineActionRole48F8DEFA",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":role/cdk-hnb659fds-deploy-role-",
           {
            "Ref": "AWS::AccountId"
           },
           "-",
           {
            "Ref": "AWS::Region"
           }
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PipelineRoleDefaultPolicy7BDC1ABB",
    "Roles": [
     {
      "Ref": "PipelineRoleB27FAA37"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "KafkaPipelineStack/Pipeline/Pipeline/Role/DefaultPolicy/Resource"
   }
  },
  "Pipeline9850B417": {
   "Type": "AWS::CodePipeline::Pipeline",
   "Properties": {
    "RoleArn": {
     "Fn::GetAtt": [
      "PipelineRoleB27FAA37",
      "Arn"
     ]
    },
    "Stages": [
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Source",
         "Owner": "AWS",
         "Provider": "CodeCommit",
         "Version": "1"
        },
        "Configuration": {
         "RepositoryName": {
          "Fn::GetAtt": [
           "KafkaRepo8D8D2D0F",
           "Name"
          ]
         },
         "BranchName": "master",
         "PollForSourceChanges": false
        },
        "Name": {
         "Fn::GetAtt": [
          "KafkaRepo8D8D2D0F",
          "Name"
         ]
        },
        "OutputArtifacts": [
         {
          "Name": "c821a533aad8de80acc8421d6ef0fd547c81e50c80_Source"
         }
        ],
        "RoleArn": {
         "Fn::GetAtt": [
          "PipelineSourceCodeCommitCodePipelineActionRole48F8DEFA",
          "Arn"
         ]
        },
        "RunOrder": 1
       }
      ],
      "Name": "Source"
     },
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Build",
         "Owner": "AWS",
         "Provider": "CodeBuild",
         "Version": "1"
        },
        "Configuration": {
         "ProjectName": {
          "Ref": "PipelineBuildSynthandEvaluateCdkBuildProjectE4560AB4"
         },
         "EnvironmentVariables": "[{\"name\":\"_PROJECT_CONFIG_HASH\",\"type\":\"PLAINTEXT\",\"value\":\"1761b1e96fd46d526ebc9a72f87da5a1a03bede8bd942b9fde74692a35490d39\"}]"
        },
        "InputArtifacts": [
         {
          "Name": "c821a533aad8de80acc8421d6ef0fd547c81e50c80_Source"
         }
        ],
        "Name": "Synth_and_Evaluate",
        "OutputArtifacts": [
         {
          "Name": "Synth_and_Evaluate_Output"
         }
        ],
        "RoleArn": {
         "Fn::GetAtt": [
          "PipelineCodeBuildActionRole226DB0CB",
          "Arn"
         ]
        },
        "RunOrder": 1
       }
      ],
      "Name": "Build"
     },
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Build",
         "Owner": "AWS",
         "Provider": "CodeBuild",
         "Version": "1"
        },
        "Configuration": {
         "ProjectName": {
          "Ref": "PipelineUpdatePipelineSelfMutationDAA41400"
         },
         "EnvironmentVariables": "[{\"name\":\"_PROJECT_CONFIG_HASH\",\"type\":\"PLAINTEXT\",\"value\":\"17780c0fe0c2f5c9ffb5becc70d522a0aa923dec1e3ca5fc7a7d578c3739ef29\"}]"
        },
        "InputArtifacts": [
         {
          "Name": "Synth_and_Evaluate_Output"
         }
        ],
        "Name": "SelfMutate",
        "RoleArn": {
         "Fn::GetAtt": [
          "PipelineCodeBuildActionRole226DB0CB",
          "Arn"
         ]
        },
        "RunOrder": 1
       }
      ],
      "Name": "UpdatePipeline"
     },
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Deploy",
         "Owner": "AWS",
         "Provider": "CloudFormation",
         "Version": "1"
        },
        "Configuration": {
         "StackName": "Deploy-Kafka",
         "Capabilities": "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND",
         "RoleArn": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":iam::",
            {
             "Ref": "AWS::AccountId"
            },
            ":role/cdk-hnb659fds-cfn-exec-role-",
            {
             "Ref": "AWS::AccountId"
            },
            "-",
            {
             "Ref": "AWS::Region"
            }
           ]
          ]
         },
         "ActionMode": "CHANGE_SET_REPLACE",
         "ChangeSetName": "PipelineChange",
         "TemplatePath": "Synth_and_Evaluate_Output::assembly-KafkaPipelineStack-Deploy/KafkaPipelineStackDeployKafka083912F1.template.json"
        },
        "InputArtifacts": [
         {
          "Name": "Synth_and_Evaluate_Output"
         }
        ],
        "Name": "Prepare",
        "RoleArn": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":role/cdk-hnb659fds-deploy-role-",
           {
            "Ref": "AWS::AccountId"
           },
           "-",
           {
            "Ref": "AWS::Region"
           }
          ]
         ]
        },
        "RunOrder": 1
       },
       {
        "ActionTypeId": {
         "Category": "Deploy",
         "Owner": "AWS",
         "Provider": "CloudFormation",
         "Version": "1"
        },
        "Configuration": {
         "StackName": "Deploy-Kafka",
         "ActionMode": "CHANGE_SET_EXECUTE",
         "ChangeSetName": "PipelineChange"
        },
        "Name": "Deploy",
        "RoleArn": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":role/cdk-hnb659fds-deploy-role-",
           {
            "Ref": "AWS::AccountId"
           },
           "-",
           {
            "Ref": "AWS::Region"
           }
          ]
         ]
        },
        "RunOrder": 2
       }
      ],
      "Name": "Deploy"
     }
    ],
    "ArtifactStore": {
     "Location": {
      "Ref": "PipelineArtifactsBucketAEA9A052"
     },
     "Type": "S3"
    },
    "RestartExecutionOnUpdate": true
   },
   "DependsOn": [
    "PipelineRoleDefaultPolicy7BDC1ABB",
    "PipelineRoleB27FAA37"
   ],
   "Metadata": {
    "aws:cdk:path": "KafkaPipelineStack/Pipeline/Pipeline/Resource"
   }
  },
  "PipelineSourceCodeCommitCodePipelineActionRole48F8DEFA": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":root"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "KafkaPipelineStack/Pipeline/Pipeline/Source/CodeCommit/CodePipelineActionRole/Resource"
   }
  },
  "PipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicy3CEB31C0": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PipelineArtifactsBucketAEA9A052",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PipelineArtifactsBucketAEA9A052",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "codecommit:CancelUploadArchive",
        "codecommit:GetBranch",
        "codecommit:GetCommit",
        "codecommit:GetUploadArchiveStatus",
        "codecommit:UploadArchive"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "KafkaRepo8D8D2D0F",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicy3CEB31C0",
    "Roles": [
     {
      "Ref": "PipelineSourceCodeCommitCodePipelineActionRole48F8DEFA"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "KafkaPipelineStack/Pipeline/Pipeline/Source/CodeCommit/CodePipelineActionRole/DefaultPolicy/Resource"
   }
  },
  "PipelineEventsRole96280D9B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "events.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "KafkaPipelineStack/Pipeline/Pipeline/EventsRole/Resource"
   }
  },
  "PipelineEventsRoleDefaultPolicy62809D8F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "codepipeline:StartPipelineExecution",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codepipeline:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":",
          {
           "Ref": "Pipeline9850B417"
          }
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PipelineEventsRoleDefaultPolicy62809D8F",
    "Roles": [
     {
      "Ref": "PipelineEventsRole96280D9B"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "KafkaPipelineStack/Pipeline/Pipeline/EventsRole/DefaultPolicy/Resource"
   }
  },
  "PipelineBuildSynthandEvaluateCdkBuildProjectRole6110BEC0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codebuild.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "KafkaPipelineStack/Pipeline/Pipeline/Build/Synth_and_Evaluate/CdkBuildProject/Role/Resource"
   }
  },
  "PipelineBuildSynthandEvaluateCdkBuildProjectRoleDefaultPolicy346BA9C0": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "PipelineBuildSynthandEvaluateCdkBuildProjectE4560AB4"
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "PipelineBuildSynthandEvaluateCdkBuildProjectE4560AB4"
           }
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "codebuild:BatchPutCodeCoverages",
        "codebuild:BatchPutTestCases",
        "codebuild:CreateReport",
        "codebuild:CreateReportGroup",
        "codebuild:UpdateReport"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codebuild:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":report-group/",
          {
           "Ref": "PipelineBuildSynthandEvaluateCdkBuildProjectE4560AB4"
          },
          "-*"
         ]
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PipelineArtifactsBucketAEA9A052",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PipelineArtifactsBucketAEA9A052",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PipelineBuildSynthandEvaluateCdkBuildProjectRoleDefaultPolicy346BA9C0",
    "Roles": [
     {
      "Ref": "PipelineBuildSynthandEvaluateCdkBuildProjectRole6110BEC0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "KafkaPipelineStack/Pipeline/Pipeline/Build/Synth_and_Evaluate/CdkBuildProject/Role/DefaultPolicy/Resource"
   }
  },
  "PipelineBuildSynthandEvaluateCdkBuildProjectE4560AB4": {
   "Type": "AWS::CodeBuild::Project",
   "Properties": {
    "Artifacts": {
     "Type": "CODEPIPELINE"
    },
    "Environment": {
     "ComputeType": "BUILD_GENERAL1_SMALL",
     "Image": "aws/codebuild/standard:5.0",
     "ImagePullCredentialsType": "CODEBUILD",
     "PrivilegedMode": false,
     "Type": "LINUX_CONTAINER"
    },
    "ServiceRole": {
     "Fn::GetAtt": [
      "PipelineBuildSynthandEvaluateCdkBuildProjectRole6110BEC0",
      "Arn"
     ]
    },
    "Source": {
     "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"build\": {\n      \"commands\": [\n        \"npm install -g aws-cdk\",\n        \"pip install -r requirements.txt\",\n        \"cdk synth '**'\",\n        \"ls cdk.out\",\n        \"curl -L -o opa https://openpolicyagent.org/downloads/v0.44.0/opa_linux_amd64_static\",\n        \"chmod 755 ./opa\",\n        \"mkdir opa_input\",\n        \"for template in $(find ./cdk.out -type f -maxdepth 2 -name '*.template.json'); do cp $template ./opa_input; done\",\n        \"ls opa_input\",\n        \"rm opa_input/KafkaPipelineStack.template.json\",\n        \"set -e\",\n        \"for template in opa_input/*; do ./opa eval --fail-defined -i $template -d cdk_kafka/policy.rego \\\"data.rules.fail[x]\\\"; done\"\n      ]\n    }\n  },\n  \"artifacts\": {\n    \"base-directory\": \"cdk.out\",\n    \"files\": \"**/*\"\n  }\n}",
     "Type": "CODEPIPELINE"
    },
    "Cache": {
     "Type": "NO_CACHE"
    },
    "Description": "Pipeline step KafkaPipelineStack/Pipeline/Build/Synth_and_Evaluate",
    "EncryptionKey": "alias/aws/s3"
   },
   "Metadata": {
    "aws:cdk:path": "KafkaPipelineStack/Pipeline/Pipeline/Build/Synth_and_Evaluate/CdkBuildProject/Resource"
   }
  },
  "PipelineCodeBuildActionRole226DB0CB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Condition": {
        "Bool": {
         "aws:ViaAWSService": "codepipeline.amazonaws.com"
        }
       },
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":root"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "KafkaPipelineStack/Pipeline/CodeBuildActionRole/Resource"
   }
  },
  "PipelineCodeBuildActionRoleDefaultPolicy1D62A6FE": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "codebuild:BatchGetBuilds",
        "codebuild:StartBuild",
        "codebuild:StopBuild"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PipelineBuildSynthandEvaluateCdkBuildProjectE4560AB4",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "PipelineUpdatePipelineSelfMutationDAA41400",
          "Arn"
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PipelineCodeBuildActionRoleDefaultPolicy1D62A6FE",
    "Roles": [
     {
      "Ref": "PipelineCodeBuildActionRole226DB0CB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "KafkaPipelineStack/Pipeline/CodeBuildActionRole/DefaultPolicy/Resource"
   }
  },
  "PipelineUpdatePipelineSelfMutationRole57E559E8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codebuild.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "KafkaPipelineStack/Pipeline/UpdatePipeline/SelfMutation/Role/Resource"
   }
  },
  "PipelineUpdatePipelineSelfMutationRoleDefaultPolicyA225DA4E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "PipelineUpdatePipelineSelfMutationDAA41400"
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "PipelineUpdatePipelineSelfMutationDAA41400"
           }
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "codebuild:BatchPutCodeCoverages",
        "codebuild:BatchPutTestCases",
        "codebuild:CreateReport",
        "codebuild:CreateReportGroup",
        "codebuild:UpdateReport"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codebuild:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":report-group/",
          {
           "Ref": "PipelineUpdatePipelineSelfMutationDAA41400"
          },
          "-*"
         ]
        ]
       }
      },
      {
       "Action": "sts:AssumeRole",
       "Condition": {
        "ForAnyValue:StringEquals": {
         "iam:ResourceTag/aws-cdk:bootstrap-role": [
          "image-publishing",
          "file-publishing",
          "deploy"
         ]
        }
       },
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:*:iam::",
          {
           "Ref": "AWS::AccountId"
          },
          ":role/*"
         ]
        ]
       }
      },
      {
       "Action": [
        "cloudformation:DescribeStacks",
        "s3:ListBucket"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PipelineArtifactsBucketAEA9A052",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PipelineArtifactsBucketAEA9A052",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PipelineUpdatePipelineSelfMutationRoleDefaultPolicyA225DA4E",
    "Roles": [
     {
      "Ref": "PipelineUpdatePipelineSelfMutationRole57E559E8"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "KafkaPipelineStack/Pipeline/UpdatePipeline/SelfMutation/Role/DefaultPolicy/Resource"
   }
  },
  "PipelineUpdatePipelineSelfMutationDAA41400": {
   "Type": "AWS::CodeBuild::Project",
   "Properties": {
    "Artifacts": {
     "Type": "CODEPIPELINE"
    },
    "Environment": {
     "ComputeType": "BUILD_GENERAL1_SMALL",
     "Image": "aws/codebuild/standard:5.0",
     "ImagePullCredentialsType": "CODEBUILD",
     "PrivilegedMode": false,
     "Type": "LINUX_CONTAINER"
    },
    "ServiceRole": {
     "Fn::GetAtt": [
      "PipelineUpdatePipelineSelfMutationRole57E559E8",
      "Arn"
     ]
    },
    "Source": {
     "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"install\": {\n      \"commands\": [\n        \"npm install -g aws-cdk@2\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"cdk -a . deploy KafkaPipelineStack --require-approval=never --verbose\"\n      ]\n    }\n  }\n}",
     "Type": "CODEPIPELINE"
    },
    "Cache": {
     "Type": "NO_CACHE"
    },
    "Description": "Pipeline step KafkaPipelineStack/Pipeline/UpdatePipeline/SelfMutate",
    "EncryptionKey": "alias/aws/s3"
   },
   "Metadata": {
    "aws:cdk:path": "KafkaPipelineStack/Pipeline/UpdatePipeline/SelfMutation/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/02OXQ6CMBCEz+J7WfEn8V0uQPAABssaV0qX0FZDmt7dVkB8mtnZ2Xy7h2MO+aZ+m0w2baboBv5ia9mKGF295AYldx1Z8BX2bMjyMIrirtcpCHyhtiY2nMLvLmoQ6banHhVpBF/OLu0XH4Q5gD872aJN+ewmKVmRHNd4moOguosknklJ1+bSSeibI9Ws3HLgJ8ovZrYhiOU9A0W8+L1YoWE3yInw5wvWDVliHUQ52gfr7QF2OZw2T0OUDU5b6hCqST/T2WoVWgEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "KafkaPipelineStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}